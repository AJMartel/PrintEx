/********************************************************************************	Copyright 2015 Christopher Andrews (http://arduino.land)		Released under MIT licence.********************************************************************************/	#include "MemoryPrinter.h"			/********************************************************************************		EEPROMPrinter class	********************************************************************************/	#ifdef __AVR__	size_t EEPROMPrinter::write( uint8_t u_Data )		{ 			if( eeprom_read_byte( End ) != u_Data )				eeprom_write_byte( End, u_Data );			++End;			return 0x01; 		}					size_t EEPROMPrinter::printTo(Print& p) const			{			uint8_t	*u_Cursor = Start;			while( u_Cursor < End ) p.write( ( uint8_t ) eeprom_read_byte( u_Cursor++ ) );			p.write( uint8_t( 0x00 ) );			return count();		}#endif	/********************************************************************************		SRAMPrinter class	********************************************************************************/		size_t SRAMPrinter::write( uint8_t u_Data )		{ 			*End++ = u_Data;			return 0x01; 		}			/********************************************************************************		PROGMEMPrinter class	********************************************************************************/		#ifdef __AVR__	size_t PROGMEMPrinter::printTo(Print& p) const			{			uint8_t *u_Cursor = Start;			size_t s_Return = 0;						while( true ){				unsigned char u_Current = pgm_read_byte( u_Cursor++ );				if ( u_Current == 0 ) break;				s_Return += p.write( u_Current );			}			return s_Return;						}#endif		