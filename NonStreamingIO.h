/********************************************************************************	Copyright 2015 Christopher Andrews (http://arduino.land)		Released under MIT licence.********************************************************************************/#ifndef HEADER_NONSTREAMINGIO	#define HEADER_NONSTREAMINGIO		#include "Arduino.h"	/***************************************************************************		NonStreamingIO Class.			This interface provides an extension to the Print class.			It allows IO capabilities for derived objects that may not 			be streams. As in, the data printed to the object is still 			available for use.						This class does not directly do any reading, it provides a start			and end pointer of data written, which can then be used by Print			to re-print the data.	***************************************************************************/	class NonStreamingIO{		public:					size_t count( void ) const { return End - Start; }						NonStreamingIO &operator =( uint8_t *t )							{ 					Start = End = t;					return *this; 				}			template< typename T > 				inline void assign( const T *u_DataPtr, const uint16_t u_Length )					{ 						Start = ( uint8_t* ) u_DataPtr; 						End = Start + u_Length; 					}		protected:			NonStreamingIO( uint8_t *u_DataPtr ) : Start( u_DataPtr ) , End( Start )											{ return; }					NonStreamingIO( uint8_t *u_DataPtr, const unsigned int u_Length ) : Start( u_DataPtr ) , End( Start + u_Length )	{ return; }												uint8_t	*Start;			uint8_t *End;						private:	};	#endif//EOF